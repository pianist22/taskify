# syntax=docker/dockerfile:1.7

# Base image for all stages
FROM node:20-alpine AS base
WORKDIR /app

# ---- Dependencies (install once for caching) ----
FROM base AS deps
# Install libc compat for some native deps on Alpine
RUN apk add --no-cache libc6-compat
COPY package.json package-lock.json* pnpm-lock.yaml* yarn.lock* ./
# Choose your installer; here we use npm ci
RUN npm ci

# ---- Build (accept MSW toggle at build time) ----
FROM base AS builder
# Pass-through public envs at build time so Next can inline them
ARG NEXT_PUBLIC_ENABLE_MSW=false
ENV NEXT_PUBLIC_ENABLE_MSW=${NEXT_PUBLIC_ENABLE_MSW}

COPY --from=deps /app/node_modules ./node_modules
COPY . .
# Build Next.js (standalone output must be enabled in next.config)
RUN npm run build

# ---- Runtime (tiny final image) ----
FROM node:20-alpine AS runner
WORKDIR /app
ENV NODE_ENV=production
ENV HOSTNAME=0.0.0.0
ENV PORT=3000

# Copy the minimal standalone server and static assets
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static

# Drop privileges
USER node

EXPOSE 3000
# server.js is generated by standalone output
CMD ["node", "server.js"]
